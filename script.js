const navToggle=document.getElementById('navToggle');const navMenu=document.getElementById('navMenu');if(navToggle&&navMenu){navToggle.addEventListener('click',()=>navMenu.classList.toggle('show'))}
const root=document.documentElement;const themeToggle=document.getElementById('themeToggle');const savedTheme=localStorage.getItem('theme');if(savedTheme==='light')root.classList.add('light');if(themeToggle){themeToggle.addEventListener('click',()=>{root.classList.toggle('light');localStorage.setItem('theme',root.classList.contains('light')?'light':'dark')})}
function animateCounters(){document.querySelectorAll('.count').forEach(el=>{const target=+el.dataset.target;let cur=0;const step=Math.max(1,Math.floor(target/60));const timer=setInterval(()=>{cur+=step;if(cur>=target){cur=target;clearInterval(timer)}el.textContent=cur.toString()},20)})} if(document.querySelector('.count'))animateCounters()
const out=document.getElementById('funOutput');const rollDiceBtn=document.getElementById('rollDice');const flipCoinBtn=document.getElementById('flipCoin');const partyBtn=document.getElementById('party');
if(rollDiceBtn&&out){rollDiceBtn.addEventListener('click',()=>{const n=Math.floor(Math.random()*6)+1;out.textContent=`ðŸŽ² You rolled a ${n}!`})}
if(flipCoinBtn&&out){flipCoinBtn.addEventListener('click',()=>{const side=Math.random()<0.5?'Heads':'Tails';out.textContent=`ðŸª™ ${side}!`})}
if(partyBtn&&out){partyBtn.addEventListener('click',()=>{out.textContent='ðŸŽ‰ Confetti time!';confettiBurst()})}
function confettiBurst(){const n=60;for(let i=0;i<n;i++){const piece=document.createElement('span');piece.textContent='âœ¦';piece.style.position='fixed';piece.style.left=Math.random()*100+'vw';piece.style.top='-2vh';piece.style.fontSize=(Math.random()*18+10)+'px';piece.style.transition='transform 1.8s ease, opacity 2s';piece.style.zIndex=9999;document.body.appendChild(piece);requestAnimationFrame(()=>{piece.style.transform=`translateY(${100+Math.random()*40}vh) rotate(${Math.random()*720-360}deg)`;piece.style.opacity='0'});setTimeout(()=>piece.remove(),2000)}}
function subscribeNews(form){const msg=document.getElementById('newsMsg');msg.textContent='Thanks! You are on the list. (This demo stores nothing.)';form.reset()}
function fakeSend(form){const msg=document.getElementById('contactMsg');msg.textContent='Message queued. (Demo: no server involved.)';form.reset()}
const yearEl=document.getElementById('year');if(yearEl)yearEl.textContent=new Date().getFullYear()
function loadThreads(){try{return JSON.parse(localStorage.getItem('threads')||'[]')}catch{return []}}
function saveThreads(t){localStorage.setItem('threads',JSON.stringify(t))}
function renderThreads(){const wrap=document.getElementById('threadsWrap');if(!wrap)return;wrap.innerHTML='';const threads=loadThreads();if(!threads.length){const p=document.createElement('p');p.className='muted';p.textContent='No threads yet. Start the first one!';wrap.appendChild(p);return}threads.forEach((t,idx)=>{const card=document.createElement('div');card.className='thread-card';card.innerHTML=`<h3>${t.title}</h3><p class="muted">${t.author||'Anonymous'} â€¢ ${new Date(t.created).toLocaleString()}</p><p>${t.body}</p>`;const comments=document.createElement('div');t.comments=t.comments||[];t.comments.forEach(c=>{const div=document.createElement('div');div.className='comment';div.innerHTML=`<strong>${c.author||'Anon'}</strong> <span class="muted">â€¢ ${new Date(c.created).toLocaleString()}</span><div>${c.text}</div>`;comments.appendChild(div)});const form=document.createElement('form');form.innerHTML=`<div class="grid-2"><input name="author" placeholder="Your name" /><input name="text" placeholder="Add a comment..." required /></div><button class="btn small" type="submit">Comment</button>`;form.addEventListener('submit',e=>{e.preventDefault();const data=new FormData(form);const author=data.get('author');const text=data.get('text');const all=loadThreads();all[idx].comments=all[idx].comments||[];all[idx].comments.push({author,text,created:Date.now()});saveThreads(all);renderThreads()});card.appendChild(comments);card.appendChild(form);wrap.appendChild(card)})}
function wireNewThreadForm(){const form=document.getElementById('newThreadForm');if(!form)return;form.addEventListener('submit',e=>{e.preventDefault();const data=new FormData(form);const title=data.get('title');const body=data.get('body');const author=data.get('author');const threads=loadThreads();threads.unshift({title,body,author,created:Date.now(),comments:[]});saveThreads(threads);form.reset();renderThreads()})}
document.addEventListener('DOMContentLoaded',()=>{renderThreads();wireNewThreadForm()})
